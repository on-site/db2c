.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "DB2C" "1" "February 2012" "" ""
.
.SH "NAME"
\fBdb2c\fR \- A DB2 console with with history and autocomplete support, and few other goodies
.
.SH "SYNOPSIS"
\fBdb2c\fR [\fIoptions\fR] [dbname]
.
.SH "DESCRIPTION && EXAMPLES"
DB2 console mode does not support readline and autocomplete, this is a wrapper for the db2 command with support for both\.
.
.IP "\(bu" 4
\fBHistory\fR:
.
.IP "" 4
.
.nf


db2 => connect to testdb (or: db2 => use testdb)
db2(testdb) => current date
db2(testdb) => \-107
(Use the arrows for history, you can also use \fICTRL\fR\-r to search the history)
db2(testdb) => history
(To see a list of all saved history lines)
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
\fBAutocomplete\fR:
.
.IP "" 4
.
.nf


db2(testdb) => sel[double\-tab]
it remembers\.\.
db2(testdb) => list tables for schema xyz
db2(testdb) => select * from xyz\.tab[double\-tab]
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
\fBYou can edit last statement or use the editor to write a new multiline statement\fR:
.
.IP "" 4
.
.nf


db2(testdb) => edit
db2(testdb) => emacs
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
\fBAny !command will be sent to the shell as is\fR:
.
.IP "" 4
.
.nf


db2(testdb) => !clear
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
You can use \fIsome\fR common shell commands directly:
.
.IP "" 4
.
.nf


db2(testdb) => ls ~
db2(testdb) => less ~/somefile
db2(testdb) => top
db2(testdb) => irb
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
You can use \fIsome psql\-like\fR meta commands
.
.IP "" 4
.
.nf


db2(testdb) => \fB\eh\fR
  == To see this help from within the console
db2(testdb) => \fB\el\fR
  == list database directory
db2(testdb) => \fB\elt [all|schema]\fR
  == list tables for all or one schema using db2 list command
db2(testdb) => \fB\el[t|v|a|s] [schema]\fR
  == list tables|views|aliases|summary\-tables for all or one schema using syscat\.tables
db2(testdb) => \fB\ed schema\.table\fR
  == describe table schema\.table
db2(testdb) => \fB\eq\fR
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
\fBYou can pipe\fR:
.
.IP "" 4
.
.nf


db2(testdb) => \edv | grep \-v SYS
db2(testdb) => select * from large\.table | less
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
For example, if a command outputs long lines, \fBless \-S\fR is your friend:
.
.IP "" 4
.
.nf


db2(testdb) => select * from table\.with\.many\.columns | less \-S
(you can scorll horizontally with left/right arrows)
.
.fi
.
.IP "" 0

.
.IP "" 0
.
.SH "OPTIONS"
.
.TP
\fB\-h\fR, \fB\-\-help\fR, \fB\-\-man\fR
Displays this help page\.
.
.TP
\fB\-t\fR
Commands will be executed when you enter a terminating semicolon (;)
.
.TP
\fB\-\-debug\fR
Displays annoying messages\.
.
.TP
\fB\-\-no\-rlrwap\fR
Don\'t use rlwrap
.
.SH "BUGS"
\fIhttp://github\.com/on\-site/db2c/issues\fR
.
.SH "AUTHOR"
Samer Abukhait \fIsamer@on\-siteNOSPAM\.com\fR, @s4mer
.
.SH "SEE ALSO"
rlwrap(1), readline(3)
